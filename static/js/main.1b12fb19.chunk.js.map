{"version":3,"sources":["pages/home/home.jsx","pages/main/main.jsx","App.jsx","index.js"],"names":["Home","useState","searchValue","setNewSearchValue","imageList","setImageList","pages","setPages","useEffect","getImages","managePhotoResponse","response","infiteScroll","console","log","imageListIncreased","concat","addImageToList","parameters","query","per_page","axios","method","url","params","then","data","results","className","type","id","placeholder","value","onChange","e","target","onClick","dataLength","length","next","hasMore","map","index","urls","alt_description","src","small","alt","Main","exact","path","component","App","interceptors","request","use","headers","ReactDOM","render","document","getElementById"],"mappings":"kSAoGeA,EA/FF,WACT,MAAyCC,mBAAS,IAAlD,mBAAOC,EAAP,KAAoBC,EAApB,KACA,EAAkCF,mBAAS,IAA3C,mBAAOG,EAAP,KAAkBC,EAAlB,KACA,EAA0BJ,mBAAS,GAAnC,mBAAOK,EAAP,KAAcC,EAAd,KACAC,qBAAU,SAACN,EAAaI,GACpBG,EAAUP,EAAaI,GAAO,KAC/B,IACH,IASMI,EAAsB,SAACC,EAASC,GAClCC,QAAQC,IAAI,sBAAuBF,GAChCA,EAPgB,SAACD,GACpB,IAAMI,EAAqBX,EAAUY,OAAOL,GAC5CE,QAAQC,IAAI,qBAAsBC,GAClCV,EAAaU,GAKTE,CAAeN,GAEfN,EAAaM,IAGfF,EAAY,SAACP,EAAaI,EAAOM,GACnC,IAAMM,EAAa,CACfC,MAAOjB,EACPI,MAAOA,EACPc,SAAU,IAEd,OAAIlB,EACOmB,IAAM,CACTC,OAAQ,MACRC,IAAK,yCACLC,OAAQN,IAEPO,MAAK,SAAAd,GAEF,OADAE,QAAQC,IAAIH,GACLA,EAASe,KAAKC,WACxBF,MAAK,SAAAd,GACHD,EAAoBC,EAAUC,MAI9BS,IAAM,CACTC,OAAQ,MACRC,IAAK,kCACLC,OAAQN,IAEPO,MAAK,SAAAd,GAAQ,OAAIA,EAASe,QAC1BD,MAAK,SAAAd,GACFD,EAAoBC,EAAUC,OAI9C,OACI,sBAAKgB,UAAU,YAAf,UAEI,qBAAKA,UAAU,uBAAf,SACI,yDAEJ,iCACI,qBAAKA,UAAU,uBAAf,SACI,qBAAKA,UAAU,GAAf,SACI,uBAAOC,KAAK,OACRC,GAAG,cACHF,UAAU,eACVG,YAAY,iCACZC,MAAO9B,EACP+B,SAAU,SAAAC,GAAC,OAAI/B,EAAkB+B,EAAEC,OAAOH,cAKtD,qBAAKJ,UAAU,2CAAf,SACI,wBAAQQ,QAAS,kBAAM3B,EAAUP,EAAaI,GAAO,IAAQuB,KAAK,SAASD,UAAU,kBAArF,yBAGR,cAAC,IAAD,CACIS,WAAYjC,EAAUkC,OACtBC,KAAM,kBAxEdhC,EAASD,EAAQ,QACjBG,EAAUP,EAAaI,GAAO,IAwEtBkC,SAAS,EAHb,SAKKpC,EAAUqC,KAAI,WAEZC,GAFY,IACXZ,EADW,EACXA,GAAIa,EADO,EACPA,KAAMC,EADC,EACDA,gBADC,OAGX,qBAAKhB,UAAU,mBAAf,SACI,qBAAKiB,IAAKF,EAAKG,MAAOC,IAAKH,KADQF,EAAQZ,YC/EpDkB,EATF,WACT,OACI,+BACI,cAAC,IAAD,UACI,cAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,IAAIC,UAAWnD,SCGlCoD,MARf,WACE,OACE,qBAAKxB,UAAU,MAAf,SACE,cAAC,EAAD,O,cCENP,IAAMgC,aAAaC,QAAQC,KACzB,SAACD,GAGC,OAFAA,EAAQE,QAAQ,kBAAoB,KACpCF,EAAQE,QAAR,cAAmC,wDAC5BF,KAGXG,IAASC,OACP,cAAC,IAAD,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.1b12fb19.chunk.js","sourcesContent":["import \"./home.css\";\r\nimport React, { useState, useEffect } from 'react';\r\nimport axios from \"axios\";\r\nimport InfiniteScroll from \"react-infinite-scroll-component\";\r\n\r\nconst Home = () => {\r\n    const [searchValue, setNewSearchValue] = useState('');\r\n    const [imageList, setImageList] = useState([]);\r\n    const [pages, setPages] = useState(1);\r\n    useEffect((searchValue, pages) => {\r\n        getImages(searchValue, pages, false);\r\n    }, []);\r\n    const fetchMoreData = () => {\r\n        setPages(pages + 1 );\r\n        getImages(searchValue, pages, true)\r\n    }\r\n    const addImageToList = (response) => {\r\n        const imageListIncreased = imageList.concat(response);\r\n        console.log('imageListIncreased', imageListIncreased);\r\n        setImageList(imageListIncreased);\r\n    }\r\n    const managePhotoResponse = (response,infiteScroll) => {\r\n        console.log('managePhotoResponse', infiteScroll);\r\n        if(infiteScroll) {\r\n            addImageToList(response);\r\n        } else {\r\n            setImageList(response);\r\n        }\r\n    }\r\n    const getImages = (searchValue, pages, infiteScroll) => {\r\n        const parameters = {\r\n            query: searchValue,\r\n            pages: pages,\r\n            per_page: 10\r\n        };\r\n        if (searchValue) {\r\n            return axios({\r\n                method: \"GET\",\r\n                url: \"https://api.unsplash.com/search/photos\",\r\n                params: parameters\r\n            })\r\n                .then(response => {\r\n                    console.log(response);\r\n                    return response.data.results})\r\n                .then(response => {\r\n                   managePhotoResponse(response, infiteScroll) \r\n                    \r\n                })\r\n        } else {\r\n            return axios({\r\n                method: \"GET\",\r\n                url: \"https://api.unsplash.com/photos\",\r\n                params: parameters\r\n            })\r\n                .then(response => response.data)\r\n                .then(response => {\r\n                    managePhotoResponse(response, infiteScroll);\r\n                })\r\n        }\r\n    };\r\n    return (\r\n        <div className=\"container\">\r\n\r\n            <div className=\"row mb-3 text-center\">\r\n                <h1>BUSCADOR DE IMAGENES.</h1>\r\n            </div>\r\n            <form>\r\n                <div className=\"row text-center mb-2\">\r\n                    <div className=\"\">\r\n                        <input type=\"text\"\r\n                            id=\"search-text\"\r\n                            className=\"form-control\"\r\n                            placeholder=\"AÃ±ade un filtro de busqueda\"\r\n                            value={searchValue}\r\n                            onChange={e => setNewSearchValue(e.target.value)}\r\n                        />\r\n                    </div>\r\n\r\n                </div>\r\n                <div className=\"row text-center col-4 offset-4 mb-3 mt-3\">\r\n                    <button onClick={() => getImages(searchValue, pages, false)} type=\"button\" className=\"btn btn-primary\">Buscar</button>\r\n                </div>\r\n            </form>\r\n            <InfiniteScroll\r\n                dataLength={imageList.length}\r\n                next={() => fetchMoreData()}\r\n                hasMore={true}\r\n            >\r\n                {imageList.map(({\r\n                    id, urls, alt_description\r\n                }, index) => (\r\n                    <div className=\"text-center mb-3\" key={index + id}>\r\n                        <img src={urls.small} alt={alt_description} />\r\n                    </div>\r\n                ))}\r\n            </InfiniteScroll>\r\n        </div>\r\n\r\n    )\r\n};\r\nexport default Home;\r\n\r\n","import { Switch, Route } from 'react-router-dom';\r\nimport Home from \"../home/home\";\r\n\r\nconst Main = () => {\r\n    return (\r\n        <main>\r\n            <Switch>\r\n                <Route exact path=\"/\" component={Home} />\r\n            </Switch>\r\n        </main>\r\n    )\r\n};\r\nexport default Main;","import './App.css';\nimport Main from './pages/main/main';\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Main />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport 'bootstrap/dist/css/bootstrap.css';\nimport axios from 'axios';\naxios.interceptors.request.use(\n  (request) => {\n    request.headers['Accept-Version'] = 'v1';\n    request.headers['Authorization'] = 'Client-ID 3pBVO1EmJlDmFTAH3VECukfrfAD_C6nPrVquHhxzOz8';\n    return request\n  }\n)\nReactDOM.render(\n  <Router>\n    <App />\n  </Router>,\n  document.getElementById('root')\n);\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}